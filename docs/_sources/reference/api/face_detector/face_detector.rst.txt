.. index:: 
  !FaceDetector Class

.. _face_detector_class:

===============================================================================
FaceDetector Class
===============================================================================

Namespace: :ref:`id3.Face<reference_api>`

.. toctree::
  :hidden:

  confidenceThreshold<confidence_threshold>
  detectFaces<detect_faces>
  model<model>
  nmsIouThreshold<nms_iou_threshold>
  processingUnit<processing_unit>
  threadCount<thread_count>
  trackFaces<track_faces>
  warmUp<warm_up>


Definition
----------
.. line-block::
    Detects human faces in images.

.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        class FaceDetector

    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        class FaceDetector implements Finalizable

    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        public partial class FaceDetector

    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        public class FaceDetector implements AutoCloseable, Serializable

    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        public class FaceDetector

    .. tab-item:: C
      :sync: C

      .. code:: C

        typedef struct id3FaceDetector *ID3_FACE_DETECTOR;



Usage
-----

.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        faceDetector = FaceDetector()
        # ...

      **Explicit destruction**

      .. code:: Python

        # ...
        del faceDetector

    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        final faceDetector = sdk.FaceDetector();
        // ...

      **Explicit destruction**

      .. code:: Dart

        // ...
        faceDetector.dispose()

    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        using (var faceDetector = new FaceDetector())
        {
           // ...
        }

      **Explicit destruction**

      .. code:: C#

        var faceDetector = new FaceDetector()
        // ...
        faceDetector.Dispose()

    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        try (FaceDetector faceDetector = new FaceDetector()) {
        // ...
        }

      **Explicit destruction**

      .. code:: Java

        FaceDetector faceDetector = new FaceDetector();
        // ...
        faceDetector.close();

    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        private var faceDetector: FaceDetector? = nil
        faceDetector = try FaceDetector()

    .. tab-item:: C
      :sync: C

      .. code:: C

        ID3_FACE_DETECTOR hFaceDetector{};
        int err = id3FaceDetector_Initialize(&hFaceDetector);
        if (err == ID3_SUCCESS) {
            // ...
            id3FaceDetector_Dispose(&hFaceDetector);
        }


Properties
----------

.. list-table:: 
  :width: 100%
  :widths: 30 5 65
  :header-rows: 1

  * - Name
    - Type
    - Description
  * - :ref:`confidenceThreshold<face_detector_confidence_threshold_class_member>`
    - int
    - Confidence threshold, in the range [0;100].
  * - :ref:`model<face_detector_model_class_member>`
    - :ref:`FaceModel<face_model_enum>`
    - Model used to detect and track faces.
  * - :ref:`nmsIouThreshold<face_detector_nms_iou_threshold_class_member>`
    - int
    - Non-maximum suppression (NMS) intersection-over-union (IOU) threshold, in the range is [0;100].
  * - :ref:`processingUnit<face_detector_processing_unit_class_member>`
    - :ref:`ProcessingUnit<processing_unit_enum>`
    - Processing unit where to run the detection process.
  * - :ref:`threadCount<face_detector_thread_count_class_member>`
    - int
    - Number of threads to be used for face detection.

Methods
-------

.. list-table:: 
  :width: 100%
  :widths: 30 70
  :header-rows: 1

  * - Name
    - Description
  * - :ref:`detectFaces<face_detector_detect_faces_class_method>`
    - Detects faces in an image and store their info in a DetectedFaceList object.
  * - :ref:`trackFaces<face_detector_track_faces_class_method>`
    - Tracks faces in an image and update their info in a DetectedFaceList object.
  * - :ref:`warmUp<face_detector_warm_up_class_method>`
    - Gets the face detector module ready to work on a specific image size by initializing all its internal memory layout.
