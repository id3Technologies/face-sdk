.. index:: 
  !Image.rotateTo Method
  
.. _image_rotate_to_class_method:

===============================================================================
Image.rotateTo Method
===============================================================================

Module: :ref:`Image<image_class>`

Definition
----------

Rotates the image to the specified angle.

.. note:: The rotation is performed counter-clockwise.


.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        rotate_to(self, angle: int, dst_image: Image) -> None

      **Parameters**

        .. line-block::

          ``angle`` int
          :guilabel:`in` The rotation angle, in degree. Supported values are [0, 90, 180, 270].

          ``dst_image`` :ref:`Image<image_class>`
          :guilabel:`in` The destination Image that receives the rotated image.


      **Exceptions**

        .. line-block::

          :ref:`FaceException<face_exception>`
          An error has occurred during Face Library execution.


    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        void rotateTo(int angle, Image dstImage)

      **Parameters**

        .. line-block::

          ``angle`` int
          :guilabel:`in` The rotation angle, in degree. Supported values are [0, 90, 180, 270].

          ``dstImage`` :ref:`Image<image_class>`
          :guilabel:`in` The destination Image that receives the rotated image.


      **Exceptions**

        .. line-block::

          :ref:`FaceException<face_exception>`
          An error has occurred during Face Library execution.


    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        public void RotateTo(int angle, Image dstImage)

      **Parameters**

        .. line-block::

          ``angle`` int
          :guilabel:`in` The rotation angle, in degree. Supported values are [0, 90, 180, 270].

          ``dstImage`` :ref:`Image<image_class>`
          :guilabel:`in` The destination Image that receives the rotated image.


      **Exceptions**

        .. line-block::

          :ref:`FaceException<face_exception>`
          An error has occurred during Face Library execution.


    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        public void rotateTo(int angle, Image dstImage) throws FaceException

      **Parameters**

        .. line-block::

          ``angle`` int
          :guilabel:`in` The rotation angle, in degree. Supported values are [0, 90, 180, 270].

          ``dstImage`` :ref:`Image<image_class>`
          :guilabel:`in` The destination Image that receives the rotated image.


      **Exceptions**

        .. line-block::

          :ref:`FaceException<face_exception>`
          An error has occurred during Face Library execution.


    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        public func rotateTo(angle: Int32, dstImage: Image) throws

      **Parameters**

        .. line-block::

          ``angle`` Int32
          :guilabel:`in` The rotation angle, in degree. Supported values are [0, 90, 180, 270].

          ``dstImage`` :ref:`Image<image_class>`
          :guilabel:`in` The destination Image that receives the rotated image.


      **Exceptions**

        .. line-block::

          :ref:`FaceException<face_exception>`
          An error has occurred during Face Library execution.


    .. tab-item:: C
      :sync: C

      .. code:: C

        int id3FaceImage_RotateTo (
            ID3_FACE_IMAGE hImage, 
            int angle, 
            ID3_FACE_IMAGE hDstImage)

      **Parameters**

        .. line-block::

          ``hImage`` :ref:`ID3_FACE_IMAGE<image_class>`
          :guilabel:`in` Handle to the Image object.

          ``angle`` int
          :guilabel:`in` The rotation angle, in degree. Supported values are [0, 90, 180, 270].

          ``hDstImage`` :ref:`ID3_FACE_IMAGE<image_class>`
          :guilabel:`in` The destination Image that receives the rotated image.


      **Returns**

        .. line-block::

          ``int``
          An error code.
          See :ref:`id3FaceError<face_error_enum>` file for the list of possible error codes.


