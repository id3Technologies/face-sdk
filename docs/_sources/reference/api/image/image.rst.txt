.. index:: 
  !Image Class

.. _image_class:

===============================================================================
Image Class
===============================================================================

Namespace: :ref:`id3.Face<reference_api>`

.. toctree::
  :hidden:

  clone<clone>
  compare<compare>
  correctGamma<correct_gamma>
  data<data>
  downscale<downscale>
  downscaleTo<downscale_to>
  extractRoi<extract_roi>
  flip<flip>
  flipTo<flip_to>
  fromBuffer<from_buffer>
  fromFile<from_file>
  fromRawBuffer<from_raw_buffer>
  fromYuvPlanes<from_yuv_planes>
  getPixels<get_pixels>
  height<height>
  pixelDepth<pixel_depth>
  pixelFormat<pixel_format>
  reallocate<reallocate>
  resize<resize>
  resizeTo<resize_to>
  rotate<rotate>
  rotateTo<rotate_to>
  set<set>
  stride<stride>
  toBuffer<to_buffer>
  toBufferObject<to_buffer_object>
  toFile<to_file>
  toNumpy<to_numpy>
  toRawBuffer<to_raw_buffer>
  transpose<transpose>
  width<width>


Definition
----------
.. line-block::
    Represents an image.

.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        class Image

    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        class Image implements Finalizable

    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        public partial class Image

    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        public class Image implements AutoCloseable, Serializable

    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        public class Image

    .. tab-item:: C
      :sync: C

      .. code:: C

        typedef struct id3FaceImage *ID3_FACE_IMAGE;



Usage
-----

.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        image = Image()
        # ...

      **Explicit destruction**

      .. code:: Python

        # ...
        del image

    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        final image = sdk.Image();
        // ...

      **Explicit destruction**

      .. code:: Dart

        // ...
        image.dispose()

    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        using (var image = new Image())
        {
           // ...
        }

      **Explicit destruction**

      .. code:: C#

        var image = new Image()
        // ...
        image.Dispose()

    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        try (Image image = new Image()) {
        // ...
        }

      **Explicit destruction**

      .. code:: Java

        Image image = new Image();
        // ...
        image.close();

    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        private var image: Image? = nil
        image = try Image()

    .. tab-item:: C
      :sync: C

      .. code:: C

        ID3_FACE_IMAGE hImage{};
        int err = id3FaceImage_Initialize(&hImage);
        if (err == ID3_SUCCESS) {
            // ...
            id3FaceImage_Dispose(&hImage);
        }


Properties
----------

.. list-table:: 
  :width: 100%
  :widths: 30 5 65
  :header-rows: 1

  * - Name
    - Type
    - Description
  * - :ref:`data<image_data_class_member>`
    - byte[]
    - Raw data buffer of the image.
  * - :ref:`height<image_height_class_member>`
    - int
    - Height in pixels.
  * - :ref:`pixelDepth<image_pixel_depth_class_member>`
    - int
    - Pixel depth.
  * - :ref:`pixelFormat<image_pixel_format_class_member>`
    - :ref:`PixelFormat<pixel_format_enum>`
    - Pixel format.
  * - :ref:`stride<image_stride_class_member>`
    - int
    - Stride in bytes.
  * - :ref:`width<image_width_class_member>`
    - int
    - Width in pixels.

Static Methods
--------------

.. list-table:: 
  :width: 100%
  :widths: 30 70
  :header-rows: 1

  * - Name
    - Description
  * - :ref:`fromBuffer<image_from_buffer_class_method>`
    - Creates an Image from the specified data buffer.
  * - :ref:`fromFile<image_from_file_class_method>`
    - Creates an Image from the specified file.
  * - :ref:`fromRawBuffer<image_from_raw_buffer_class_method>`
    - Creates an Image from the specified raw data buffer.
  * - :ref:`fromYuvPlanes<image_from_yuv_planes_class_method>`
    - Creates an Image from the specified YUV planes.
  * - :ref:`set<image_set_class_method>`
    - Sets the Image object fields.

Methods
-------

.. list-table:: 
  :width: 100%
  :widths: 30 70
  :header-rows: 1

  * - Name
    - Description
  * - :ref:`clone<image_clone_class_method>`
    - Clones the Image object.
  * - :ref:`compare<image_compare_class_method>`
    - Computes the difference with another image.
  * - :ref:`correctGamma<image_correct_gamma_class_method>`
    - Applies a gamma correction to the image.
  * - :ref:`downscale<image_downscale_class_method>`
    - Downscales the image in-place so that its maximum dimension is equal to the given maximum size, while preserving the aspect ratio.
  * - :ref:`downscaleTo<image_downscale_to_class_method>`
    - Downscales the image so that its maximum dimension equals the given maximum size, while preserving the aspect ratio.
  * - :ref:`extractRoi<image_extract_roi_class_method>`
    - Extracts a region of interest in the image according to the given bounds.
  * - :ref:`flip<image_flip_class_method>`
    - Flips the image in-place.
  * - :ref:`flipTo<image_flip_to_class_method>`
    - Flips the image.
  * - :ref:`getPixels<image_get_pixels_class_method>`
    - Gets a pointer to the image pixels.
  * - :ref:`reallocate<image_reallocate_class_method>`
    - Reallocates the internal memory of the Image from parameters.
  * - :ref:`resize<image_resize_class_method>`
    - Resizes the image in-place to the required width and height.
  * - :ref:`resizeTo<image_resize_to_class_method>`
    - Resizes the image to the specified width and height.
  * - :ref:`rotate<image_rotate_class_method>`
    - Rotates the image in-place to the specified angle.
  * - :ref:`rotateTo<image_rotate_to_class_method>`
    - Rotates the image to the specified angle.
  * - :ref:`toBuffer<image_to_buffer_class_method>`
    - Exports the image to a buffer.
  * - :ref:`toBufferObject<image_to_buffer_object_class_method>`
    - Copies the image to a buffer in the specified format.
  * - :ref:`toFile<image_to_file_class_method>`
    - Saves the image to the specified file.
  * - :ref:`toNumpy<image_to_numpy_class_method>`
    - Exports the image to a numpy array (Python only)
  * - :ref:`toRawBuffer<image_to_raw_buffer_class_method>`
    - Copies image pixels in the specified format into a buffer.
  * - :ref:`transpose<image_transpose_class_method>`
    - Transposes the image object.
